import { Material } from "./Layout3d";
export declare class Configuration {
    id: string;
    configurationModelId: string;
    root: ConfigurationFeature;
    linkedMachinesNode: ConfigurationFeature;
    steps: ConfigurationStep[];
    preconfigurationFeatures: ConfigurationFeature[];
    values: {
        [id: string]: ConfigurationValue;
    };
    textValues: {
        [id: string]: string;
    };
    language: string;
    currency: string;
    languages: {
        [iso: string]: string;
    };
    basePriceExclVat: string;
    additionalPriceExclVat: string;
    totalPriceExclVat: string;
    totalPriceInclVat: string;
    totalPrice: number;
    autodeskUrn: string;
    autodeskIntegrationApplicationId: string;
    foreignAutodeskUrns: {
        [featureModelId: string]: string;
    };
    conflicts: ConfigurationConflict[];
    threeDItemsToHide: string[];
    threeDItemMappings: {
        [featureModelId: string]: Mapped3dItems;
    };
    linkedConfigurationModels: LinkedConfigurationModel[];
    linkedConfigurations: LinkedConfiguration[];
    requirements: ConfigurationRequirement[];
}
export declare class ConfigurationRequirement {
    nodeId: string;
    value: number;
}
export declare class LinkedConfigurationModel {
    parentNodeId: string;
    configurationModelId: string;
    configurationModelName: string;
    allowCardinality: boolean;
    allowMultiplier: boolean;
}
export declare class LinkedConfiguration {
    id: string;
    configurationId: string;
    parentNodeId: string;
    linkedConfigurationId: string;
    rootFeatureId: string;
    path: string;
    order: number;
    totalPrice: string;
    totalPriceInclVat: string;
    unitPrice: string;
    unitPriceInclVat: string;
    multiplier: number;
    name: string;
    combinedInView: boolean;
}
export declare class ConfigurationValue {
    selected: boolean;
    value: number;
}
export declare class Mapped3dItems {
    visibleItems: string[];
    hiddenItems: string[];
    itemColors: {
        [nodeId: string]: number[];
    };
    itemMaterials: {
        [objectId: string]: Material;
    };
}
export declare class ConfigurationStep {
    id: string;
    title: string;
    type: StepType;
    features: ConfigurationFeature[];
    mainCameraPosition: CameraPosition;
    cameraPositions: CameraPosition[];
    thirdPartyUrl: string;
    sendDataOnConfigurationUpdate: boolean;
}
export declare class CameraPosition {
    featureModelNodeId: string;
    state: string;
}
export declare enum StepType {
    Hotspots = 2,
    ThreeD = 5,
    ThirdParty = 7
}
export declare class ConfigurationFeature {
    id: string;
    configurationId: string;
    configurationModelId: string;
    featureId: string;
    value: number;
    isDisabled: boolean;
    disabledReason: string;
    textValue: string;
    imageValue: string;
    isSelected: boolean;
    code: string;
    description: string;
    extendedDescription: string;
    moreInfo: string;
    unitOfMeasurement: string;
    imageUrl: string;
    type: FeatureModelRelationshipTypes;
    features: ConfigurationFeature[];
    isBestMatch: boolean;
    isMandatory: boolean;
    displayType: FeatureModelRelationshipDisplayType;
    hideInQuotation: boolean;
    unitPrice: string;
    unitPriceInclVat: string;
    totalPrice: string;
    totalPriceInclVat: string;
    threeDModelItems: string[];
    hiddenThreeDModelItems: string[];
    searchbarColumns: string[];
    featureType: FeatureType;
    minValue: number;
    maxValue: number;
}
export declare enum FeatureType {
    Feature = 0,
    ColorPicker = 2,
    Text = 3,
    Image = 4
}
export declare enum FeatureModelRelationshipDisplayType {
    Standard = 0,
    Card = 1,
    Dropdown = 2,
    Mandatory = 3,
    Searchbar = 4,
    TableRow = 5,
    NonDialogSearchbar = 6
}
export declare enum FeatureModelRelationshipTypes {
    Optional = 0,
    Mandatory = 1,
    Alternative = 2,
    Or = 3,
    Required = 4,
    Excludes = 5,
    Implies = 6
}
export declare class ConfigurationConflict {
    feature: ConfigurationFeature;
    alternativeOptions: ConfigurationFeature[];
    type: ConflictType;
    requestedValue: number;
    actualValue: number;
}
export declare enum ConflictType {
    Add = 0,
    Remove = 1,
    Alternative = 2,
    Value = 3
}
