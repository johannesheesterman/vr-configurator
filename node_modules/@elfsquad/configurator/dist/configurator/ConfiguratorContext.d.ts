import { AuthenticationContext } from '@elfsquad/authentication';
import { Configuration } from '../models/Configuration';
import { ConfigurationModels } from '../models/ConfigurationModels';
import { Layout3d } from '../models/Layout3d';
import { Settings } from '../models/Settings';
import { IConfiguratorOptions } from './IConfiguratorOptions';
export declare class ConfiguratorContext {
    private options;
    authenticationContext: AuthenticationContext;
    configuration: Configuration;
    constructor(options: IConfiguratorOptions);
    getConfigurationModels(languageIso?: string | undefined): Promise<ConfigurationModels>;
    newConfiguration(name: string): Promise<Configuration>;
    openConfiguration(configurationId: string): Promise<Configuration>;
    updateRequirement(featureModelNodeId: string, isSelection: boolean, value: number, ignoreConflicts?: boolean): Promise<Configuration>;
    updateText(featureModelNodeId: string, textValue: string): Promise<Configuration>;
    changeLanguage(languageIso: string): Promise<Configuration>;
    getStepImage(stepId: string, size?: number, background?: boolean): Promise<Blob>;
    getPdf(): Promise<Blob>;
    getSettings(): Promise<Settings>;
    getLayout3d(): Promise<Layout3d>;
    private get;
    private put;
    private fetchRequest;
    private useElfsquadIdHeader;
}
